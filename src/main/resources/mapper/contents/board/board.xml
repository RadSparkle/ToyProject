<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.toyproject.api.contents.board.mapper.BoardMapper">
   <select id="getBoardList" resultType="com.toyproject.api.contents.board.dto.BoardDto$boardList" parameterType="com.toyproject.api.contents.board.dto.BoardDto$boardList">
       SELECT a.bid AS bid
            , a.pid AS pid
            , a.title AS title
            , a.views AS views
            , a.cmt_count AS cmtCount
            , a.is_use AS isUse
            , a.reg_dt AS regDt
            , b.board_link AS boardLink
            , b.board_name AS boardName
            , c.contents AS contents
            , d.likeCount AS likeCount
       FROM toy_cont.board a
       LEFT OUTER JOIN (SELECT bid, b_type, board_name, board_link from toy_cont.board_group WHERE bid = #{bid}) b ON a.bid = b.bid
       LEFT OUTER JOIN (SELECT bid, contents, pid FROM toy_cont.board_info WHERE bid = #{bid}) c ON a.pid = c.pid
       LEFT OUTER JOIN (SELECT DISTINCT(pid), COUNT(*) AS likeCount FROM toy_cont.board_like WHERE bid = #{bid} GROUP BY pid) d ON a.pid = d.pid
       WHERE a.bid = #{bid}
         AND is_use = 1
       ORDER BY a.reg_dt DESC
   </select>

    <select id="getBoardCount" resultType="HashMap" parameterType="com.toyproject.api.contents.board.dto.BoardDto$boardList">
        SELECT COUNT(*) AS boardCount
        FROM toy_cont.board
        WHERE bid = #{bid}
          AND is_use = 1
    </select>

    <insert id="insertBoardInfo" parameterType="com.toyproject.api.contents.board.dto.BoardDto$boardInfo">
        <selectKey keyProperty="pid" resultType="Integer" order="BEFORE">
            SELECT IFNULL(MAX(pid)+1, 1) AS pid
            FROM toy_cont.board_info WHERE bid = #{bid}
        </selectKey>
        INSERT INTO toy_cont.board_info (bid, uid, nickname, b_link, img_link, is_notice, is_use, pid, title, contents)
        VALUES (#{bid}, #{uid}, #{nickname}, #{bLink}, #{imgLink}, #{isNotice}, #{isUse}, #{pid}, #{title}, #{contents})
    </insert>

    <insert id="insertBoard" parameterType="com.toyproject.api.contents.board.dto.BoardDto$boardInfo">
            <selectKey keyProperty="pid" resultType="Integer" order="BEFORE">
                SELECT IFNULL(MAX(pid)+1,1) AS pid
                FROM toy_cont.board WHERE bid = #{bid}
            </selectKey>
        INSERT INTO toy_cont.board (bid, title, uid, pid)
        VALUES (#{bid}, #{title}, #{uid}, #{pid})
    </insert>

    <select id="getBoardInfo" parameterType="Integer" resultType="com.toyproject.api.contents.board.dto.BoardDto$boardInfo">
        SELECT a.pid AS pid
             , a.bid AS bid
             , a.uid AS uid
             , a.title AS title
             , a.nickname AS nickname
             , a.img_link AS imgLink
             , a.is_notice AS isNotice
             , a.is_use AS isUse
             , a.reg_dt AS regDt
             , a.mod_dt AS modDt
             , a.contents AS contents
             , b.board_link AS bLink
             , b.board_name AS boardName
        FROM toy_cont.board_info a
        LEFT OUTER JOIN(SELECT bid, board_link, board_name FROM toy_cont.board_group WHERE bid = #{bid}) b ON a.bid = b.bid
        WHERE a.pid = #{pid}
          AND a.bid = #{bid}
          AND a.is_use = 1
    </select>

    <update id="deleteBoard" parameterType="com.toyproject.api.contents.board.dto.BoardDto$boardList">
            UPDATE toy_cont.board
            SET is_use = 0
            WHERE bid = #{bid}
            AND pid = #{pid}
            AND uid = #{uid}
    </update>

    <update id="deleteBoardInfo" parameterType="com.toyproject.api.contents.board.dto.BoardDto$boardList">
            UPDATE toy_cont.board_info
            SET is_use = 0
            WHERE bid = #{bid}
            AND pid = #{pid}
            AND uid = #{uid}
    </update>

    <update id="deleteBoardMulti" parameterType="com.toyproject.api.contents.board.dto.BoardDto$boardList">
        <foreach collection="pidList" separator=";" item="item" >
            UPDATE toy_cont.board
            SET is_use = 0
            WHERE bid = #{bid}
            AND pid = #{item}
            AND uid = #{uid}
        </foreach>
    </update>

    <update id="deleteBoardInfoMulti" parameterType="com.toyproject.api.contents.board.dto.BoardDto$boardList">
        <foreach collection="pidList" separator=";" item="item" >
                UPDATE toy_cont.board_info
                SET is_use = 0
                WHERE bid = #{bid}
                AND pid = #{item}
                AND uid = #{uid}
        </foreach>
    </update>

    <insert id="insertLike" parameterType="com.toyproject.api.contents.board.dto.BoardDto$boardLike">
        INSERT INTO toy_cont.board_like (uid, pid, bid)
        VALUES (#{uid}, #{pid}, #{bid})
    </insert>

    <delete id="insertUnlike" parameterType="com.toyproject.api.contents.board.dto.BoardDto$boardLike">
        DELETE FROM toy_cont.board_like
        WHERE uid = #{uid}
          AND pid = #{pid}
          AND bid = #{bid}
    </delete>

    <update id="updateBoard" parameterType="com.toyproject.api.contents.board.dto.BoardDto$boardInfo">
        UPDATE toy_cont.board
        SET title = #{title}
          , mod_dt = now()
        WHERE bid = #{bid}
          AND pid = #{pid}
          AND uid = #{uid}
    </update>

    <update id="updateBoardInfo" parameterType="com.toyproject.api.contents.board.dto.BoardDto$boardInfo">
        UPDATE toy_cont.board_info
        SET title = #{title}
          , contents = #{contents}
          , mod_dt = now()
        WHERE bid = #{bid}
          AND pid = #{pid}
          AND uid = #{uid}
    </update>

    <insert id="insertCmt" parameterType="com.toyproject.api.contents.board.dto.BoardDto$boardCmt">
        <selectKey keyProperty="cid" resultType="Integer" order="BEFORE">
            SELECT IFNULL(MAX(cid)+1,1) AS cid
            FROM toy_cont.comments WHERE bid = #{bid} AND pid = #{pid}
        </selectKey>
        INSERT INTO toy_cont.comments (cid, uid, bid, pid, contents)
        VALUES (#{cid}, #{uid}, #{bid}, #{pid}, #{contents})
    </insert>

    <select id="getCmt" parameterType="Integer" resultType="com.toyproject.api.contents.board.dto.BoardDto$boardCmt">
        SELECT cid AS cid
            , uid AS uid
            , bid AS bid
            , pid AS pid
            , contents AS contents
            , reg_dt AS regDt
            , mod_Dt AS modDt
        FROM toy_cont.comments
        WHERE bid = #{bid}
         AND pid = #{pid}
    </select>
</mapper>